/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author RODGER
 */
import java.time.format.DateTimeFormatter;
import java.text.DateFormat;
import java.time.LocalDateTime;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.*;
import java.sql.*;
import net.proteanit.sql.DbUtils;
//import javax.swing.table.TableColumnModel;
import javax.swing.table.*;
public class transact extends javax.swing.JFrame {

    /**
     * Creates new form stock_view
     */
    public transact() {
        initComponents();
       //String type=jComboBox1.getSelectedItem().toString();
//JOptionPane.showMessageDialog(null,type);
        try{
            javaconnect connect=new javaconnect();
          Connection conn=javaconnect.getConnection();
        //Connection conn=null;
        ResultSet rs=null;
        Statement stmt=null;
        PreparedStatement pst=null;
        
               String sql6="select  `id` as 'id',name as 'Name',detail as 'Description',quantity as 'Quantity',supplier as 'Supplier',price as 'Cost (Ksh)' from product";
       pst=conn.prepareStatement(sql6);
        rs=pst.executeQuery(); 
        //JOptionPane.showMessageDialog(null,rs.getString("Quantity"));
        jTable1.setModel(DbUtils.resultSetToTableModel(rs));
      String sql2="select * from cart";
         pst=conn.prepareStatement(sql2);
        rs=pst.executeQuery();
        cart.setModel(DbUtils.resultSetToTableModel(rs));
        TableColumnModel tcm=jTable1.getColumnModel();
        tcm.removeColumn(tcm.getColumn(0));
                TableColumnModel tcm1=cart.getColumnModel();
        tcm1.removeColumn(tcm1.getColumn(0));
ResultSet rs2=null;
         PreparedStatement pst2=null;
        String sql4="select SUM(total_cost) from cart";
        pst2=conn.prepareStatement(sql4);
        
        rs2=pst2.executeQuery();
        while (rs2.next()) 
            
{
    int std = rs2.getInt(1);
    total_l.setText(String.valueOf(std));
}
         DateFormat dtf=new SimpleDateFormat("yyyy-MM-dd");
       // Date date=new Date();
       Date date=new Date();
        dtf.format(date);
        sell_date.setDate(date);
String sql_ps="select id,name,detail,quantity,total_cost,profit,date_sold,sold_by from sells where date_sold like '%"+dtf.format(date)+"%' order by date_sold desc";
         pst=conn.prepareStatement(sql_ps);
        rs=pst.executeQuery();
        t_sold.setModel(DbUtils.resultSetToTableModel(rs));
                TableColumnModel tcm2=t_sold.getColumnModel();
        tcm2.removeColumn(tcm2.getColumn(0));
        
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
        }
        //DateFormat dtf=new SimpleDateFormat("yyyy/MM/dd");
        //Date date=new Date();
        //dtf.format(date);
     //   JOptionPane.showMessageDialog(null,dtf.format(date));
     // sell_date.setDate(dtf.format(date));
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        search = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        detail = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        price = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        add_cart = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        t_sold = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        sell_date = new com.toedter.calendar.JDateChooser();
        jLabel28 = new javax.swing.JLabel();
        paid = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        cart = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        total_l = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        balance = new javax.swing.JLabel();
        total_b = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 204));

        search.setBackground(new java.awt.Color(153, 204, 255));
        search.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        search.setForeground(new java.awt.Color(255, 255, 255));
        search.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255), 3));
        search.setSelectedTextColor(new java.awt.Color(0, 51, 51));
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Search");

        jPanel5.setBackground(new java.awt.Color(0, 102, 204));

        detail.setBackground(new java.awt.Color(153, 204, 255));
        detail.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        detail.setForeground(new java.awt.Color(255, 255, 255));
        detail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255), 3));
        detail.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("NAME");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("DESCRIPTION");

        name.setBackground(new java.awt.Color(153, 204, 255));
        name.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        name.setForeground(new java.awt.Color(255, 255, 255));
        name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255), 3));
        name.setEnabled(false);
        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        price.setBackground(new java.awt.Color(153, 204, 255));
        price.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        price.setForeground(new java.awt.Color(255, 255, 255));
        price.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255), 3));
        price.setEnabled(false);
        price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceActionPerformed(evt);
            }
        });
        price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                priceKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("COST");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("QUANTITY");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("TOTAL");

        quantity.setBackground(new java.awt.Color(163, 204, 255));
        quantity.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        quantity.setForeground(new java.awt.Color(255, 255, 255));
        quantity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255), 3));
        quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityActionPerformed(evt);
            }
        });
        quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantityKeyReleased(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(0, 153, 51));
        jPanel6.setEnabled(false);
        jPanel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel6MouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Sell");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 111, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 42, Short.MAX_VALUE)
                    .addComponent(jLabel6)
                    .addGap(0, 43, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel6)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Customer Transaction");

        jCheckBox1.setBackground(new java.awt.Color(0, 102, 204));
        jCheckBox1.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setText("Negotiable");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(0, 153, 51));
        jPanel7.setEnabled(false);
        jPanel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel7MouseClicked(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("Sell");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(0, 37, Short.MAX_VALUE)
                    .addComponent(jLabel31)
                    .addGap(0, 37, Short.MAX_VALUE)))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel31)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        total.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        total.setForeground(new java.awt.Color(255, 255, 255));
        total.setText("0");
        total.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        total.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                totalPropertyChange(evt);
            }
        });

        add_cart.setBackground(new java.awt.Color(0, 153, 255));
        add_cart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                add_cartMouseClicked(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText(">>");

        javax.swing.GroupLayout add_cartLayout = new javax.swing.GroupLayout(add_cart);
        add_cart.setLayout(add_cartLayout);
        add_cartLayout.setHorizontalGroup(
            add_cartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, add_cartLayout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel33)
                .addGap(23, 23, 23))
        );
        add_cartLayout.setVerticalGroup(
            add_cartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(120, 120, 120)
                        .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(139, 139, 139))))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(120, 120, 120)
                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(73, 73, 73)
                                .addComponent(detail, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel4)
                        .addGap(95, 95, 95)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(add_cart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGap(70, 70, 70)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel11))
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel2))
                    .addComponent(detail, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel3))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(57, 57, 57)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(add_cart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1233, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );

        jComboBox1.setBackground(new java.awt.Color(153, 204, 255));
        jComboBox1.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name", "Detail", "Supplier" }));
        jComboBox1.setToolTipText("Search Field (Column)");
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(51, 153, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTabbedPane1.addTab("PRODUCTS ON STOCK", jScrollPane1);

        t_sold.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(t_sold);

        jButton6.setText("Filter");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        sell_date.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sell_date, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton6)
                    .addComponent(sell_date, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("PRODUCTS SOLD", jPanel4);

        jLabel28.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Balance Calculation");

        paid.setBackground(new java.awt.Color(163, 204, 255));
        paid.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        paid.setForeground(new java.awt.Color(255, 255, 255));
        paid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255), 3));
        paid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paidActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Balance");

        jLabel30.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Paid");

        jPanel3.setBackground(new java.awt.Color(221, 217, 222));
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel3MouseClicked(evt);
            }
        });
        jPanel3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPanel3KeyReleased(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Calculate");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        cart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(cart);

        jPanel10.setBackground(new java.awt.Color(0, 204, 204));

        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Total");

        total_l.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
        total_l.setForeground(new java.awt.Color(255, 255, 255));
        total_l.setText("0");
        total_l.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                total_lCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        jPanel11.setBackground(new java.awt.Color(0, 153, 51));
        jPanel11.setEnabled(false);
        jPanel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel11MouseClicked(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Sell");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 63, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addGap(0, 20, Short.MAX_VALUE)
                    .addComponent(jLabel35)
                    .addGap(0, 19, Short.MAX_VALUE)))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addGap(0, 3, Short.MAX_VALUE)
                    .addComponent(jLabel35)
                    .addGap(0, 4, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(total_l, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel34)
                        .addComponent(total_l))
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane2.addTab(" PRODUCT LIST", jPanel8);

        balance.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
        balance.setForeground(new java.awt.Color(255, 255, 255));
        balance.setText("0");

        total_b.setBackground(new java.awt.Color(163, 204, 255));
        total_b.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        total_b.setForeground(new java.awt.Color(255, 255, 255));
        total_b.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255), 3));
        total_b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                total_bActionPerformed(evt);
            }
        });

        jLabel42.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setText("Total");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel29)
                                    .addComponent(jLabel30)
                                    .addComponent(jLabel42))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(balance, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(total_b, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(paid, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 5, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addGap(177, 177, 177)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(paid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(total_b, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel42))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(balance))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92))
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1291, 1291, 1291))
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1325, 713));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        
// TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void jPanel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseClicked
        // TODO add your handling code here:
        //Connection conn=null;
       Statement stmt=null;
        String name_d=name.getText();
        String detail_d=detail.getText();
        String price_d=price.getText();
        String quantity_d=quantity.getText();
        String supplier_d=total.getText();
        try{
            javaconnect connect=new javaconnect();
          Connection conn=javaconnect.getConnection();
        ResultSet rs=null;
     //   Statement stmt=null;
        PreparedStatement pst=null;
          
            int index=jTable1.getSelectedRow();
      TableModel model=jTable1.getModel();
            String id_e = model.getValueAt(index, 0).toString();
      String name_e = model.getValueAt(index, 1).toString();
      String detail_e = model.getValueAt(index, 2).toString();
      String price_e = model.getValueAt(index, 3).toString();
      String quantity_e = model.getValueAt(index, 4).toString();
      String supplier_e = model.getValueAt(index, 5).toString();
     // pack();
           
          String sql="update product set name='"+name_d+"',detail='"+detail_d+"',price='"+price_d+"',quantity='"+quantity_d+"',supplier='"+supplier_d+"' where id='"+id_e+"'";
          stmt=conn.createStatement();
          stmt.executeUpdate(sql);
            // stmt.setString(1,name_d);
    
       // Connection conn=DriverManager.getConnection(url,username_d,password_d);
        String sql2="select  `Date_added` as 'Date added',name as 'Name',detail as 'Description',quantity as 'Quantity',supplier as 'Supplier',price as 'Cost (Ksh)' from product";
       pst=conn.prepareStatement(sql2);
        rs=pst.executeQuery();
        jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                TableColumnModel tcm=jTable1.getColumnModel();
        tcm.removeColumn(tcm.getColumn(0));
  
            JOptionPane.showMessageDialog(null,"Product Succefully updated");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
     
    }//GEN-LAST:event_jPanel6MouseClicked

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
    String types=jComboBox1.getSelectedItem().toString();                                  
 // JOptionPane.showMessageDialog(null,types);

        try{
          javaconnect connect=new javaconnect();
          Connection conn=javaconnect.getConnection();
        //Connection conn=null;
        ResultSet rs=null;
        Statement stmt=null;
        PreparedStatement pst=null;
        
        String sql="select  `id` as 'id',name as 'Name',detail as 'Description',quantity as 'Quantity',supplier as 'Supplier',price as 'Cost (Ksh)' from product where "+types+" like '%"+search.getText()+"%'";
       pst=conn.prepareStatement(sql);
        rs=pst.executeQuery();
        jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                TableColumnModel tcm=jTable1.getColumnModel();
        tcm.removeColumn(tcm.getColumn(0));
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
        }
// TODO add your handling code here:
    }//GEN-LAST:event_searchKeyReleased

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased

        
        int index=jTable1.getSelectedRow();
      TableModel model=jTable1. getModel();
   // this.setExtendedState(this.getExtendedState()| this.MAXIMIZED_BOTH);
      String name_e = model.getValueAt(index, 1).toString();
      String detail_e = model.getValueAt(index, 2).toString();
      String price_e = model.getValueAt(index, 5).toString();
      String quantity_e = model.getValueAt(index, 3).toString();
      String supplier_e = model.getValueAt(index, 4).toString();
      
      
    name.setText(name_e);
    detail.setText(detail_e);
    price.setText(price_e);
    quantity.setText("1");
    //total.setText(supplier_e);
                   String sum;
        sum=String.valueOf(Integer.parseInt(quantity.getText())*Integer.parseInt(price.getText()));
        total.setText(sum);
        // TODO add your handling code here:
                if(!(paid.getText()).equals("")){
                    int change;
   change=Integer.parseInt(paid.getText())-Integer.parseInt(total.getText());
   String change2=String.valueOf(change);
   balance.setText(change2);
   
                }else{
        balance.setText("0");
        }
     total_b.setText(total.getText());           
    }//GEN-LAST:event_jTable1MouseReleased

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
                        int index=jTable1.getSelectedRow();
      TableModel model=jTable1.getModel();
   
      String name_e = model.getValueAt(index, 1).toString();
      String detail_e = model.getValueAt(index, 2).toString();
      String price_e = model.getValueAt(index, 5).toString();
      String quantity_e = model.getValueAt(index, 3).toString();
      String supplier_e = model.getValueAt(index, 4).toString();
      //pack();
      
    name.setText(name_e);
    detail.setText(detail_e);
    price.setText(price_e);
    quantity.setText("1");
    //total.setText(supplier_e); 
        
            String sum;
        sum=String.valueOf(Integer.parseInt(quantity.getText())*Integer.parseInt(price.getText()));
        total.setText(sum);
                if(!(paid.getText()).equals("")){
                    int change;
   change=Integer.parseInt(paid.getText())-Integer.parseInt(total.getText());
   String change2=String.valueOf(change);
   balance.setText(change2);
                }else{
        balance.setText("0");
        }
// TODO add your handling code here:
total_b.setText(total.getText());
    }//GEN-LAST:event_jTable1KeyReleased

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox1MouseClicked

    private void jPanel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel7MouseClicked
        // TODO add your handling code here:
       // Connection conn=null;
     //   PreparedStatement pst=null;
        //ResultSet rs=null;
         
        Statement stmt=null;
        String name_d=name.getText();
        String detail_d=detail.getText();
        String price_d=price.getText();
        String quantity_d=quantity.getText();
        String supplier_d=total.getText();
        try{
            javaconnect connect=new javaconnect();
          Connection conn=javaconnect.getConnection();
            ResultSet rs=null;
            //Statement stmt=null;
            PreparedStatement pst=null;
            
         /*   String check="select * from cart";
        pst=conn.prepareStatement(check);
        rs=pst.executeQuery();
       if(!rs.next()){
            
        String buy="insert into sells select * from cart";
        stmt=conn.createStatement();
        stmt.executeUpdate(buy);
        String buy2="delete from  cart";
        stmt=conn.createStatement();
        stmt.executeUpdate(buy2);
         String sql2="select * from cart";
         pst=conn.prepareStatement(sql2);
        rs=pst.executeQuery();
        cart.setModel(DbUtils.resultSetToTableModel(rs));
        
        
        }
        else{*/
            int index=jTable1.getSelectedRow();
            TableModel model=jTable1.getModel();
            String id_e = model.getValueAt(index, 0).toString();
            String name_e = model.getValueAt(index, 1).toString();
            String detail_e = model.getValueAt(index, 2).toString();
            String price_e = model.getValueAt(index, 5).toString();
            String quantity_e = model.getValueAt(index,3).toString();
            String supplier_e = model.getValueAt(index, 4).toString();
             int tb_quantity=Integer.parseInt(quantity_e);
              int tx_quantity=Integer.parseInt(quantity.getText());
              if(tb_quantity>tx_quantity){          
            ResultSet rs_p=null;
            //Statement stmt=null;
            
            PreparedStatement pst_p=null;
            String sql_p="SELECT buying_price FROM product WHERE id='"+id_e+"'";
        pst=conn.prepareStatement(sql_p);
        
        rs_p=pst.executeQuery();
        String usr_p=null;
        while (rs_p.next()) 
{
    String std_p= (rs_p.getString(1));
    float pt=Float.valueOf(total.getText())-(Float.valueOf(quantity.getText())*Float.valueOf(std_p));
    usr_p=String.valueOf(pt);
//JOptionPane.showMessageDialog(null,usr_p);
//System.out.println(usr_p);
//int a=Integer.parseInt(usr_p);
}
        
    String sql4="SELECT username FROM `login_time` WHERE id=(select MAX(ID) from login_time)";
        pst=conn.prepareStatement(sql4);
        
        rs=pst.executeQuery();
        while (rs.next()) 
{
    String std = rs.getString(1);
    String usr=String.valueOf(std);

          //  pack();
          // JOptionPane.showMessageDialog(null,id_e+","+name_d+","+detail_d+","+quantity_d+","+total.getText() );

          String sql="insert into sells(id,name,detail,quantity,total_cost,sold_by,profit,date_only) values('"+id_e+"','"+name_d+"','"+detail_d+"','"+quantity_d+"','"+total.getText()+"','"+usr+"','"+usr_p+"',CURRENT_TIMESTAMP)";
            stmt=conn.createStatement();
            stmt.executeUpdate(sql);}
/*     String sql="update sale set name='"+name_d+"',detail='"+detail_d+"',price='"+price_d+"',quantity='"+quantity_d+"',supplier='"+supplier_d+"' where id='"+id_e+"'";
            stmt=conn.createStatement();
            stmt.executeUpdate(sql);
            // stmt.setString(1,name_d);
*/
            // Connection conn=DriverManager.getConnection(url,username_d,password_d);
                    
            int rem=Integer.parseInt(quantity_e)-Integer.parseInt(quantity.getText());
            
       /*     rem=rem-1;
           rem=rem-a;
            a=a+1;*/
          // JOptionPane.showMessageDialog(null,quantity_e);
            String red="update product set quantity='"+rem+"' where id='"+id_e+"'";
            stmt=conn.createStatement();
            stmt.executeUpdate(red);
           String sql3="select  `id` as 'id',name as 'Name',detail as 'Description',quantity as 'Quantity',supplier as 'Supplier',price as 'Cost (Ksh)' from product";
      pst=conn.prepareStatement(sql3);
      rs=pst.executeQuery();
     jTable1.setModel(DbUtils.resultSetToTableModel(rs));
             TableColumnModel tcm=jTable1.getColumnModel();
        tcm.removeColumn(tcm.getColumn(0));
     //JOptionPane.showMessageDialog(null,Integer.parseInt(quantity.getText()));
          //  String sql2="select  `Id` as 'Id',name as 'Name',detail as 'Description',quantity as 'Quantity',supplier as 'Supplier',price as 'Cost (Ksh)' from sells";
            //pst=conn.prepareStatement(sql2);
            //rs=pst.executeQuery();
            //jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                     DateFormat dtf=new SimpleDateFormat("yyyy-MM-dd");
       // Date date=new Date();
       Date date=new Date();
        dtf.format(date);
        //sell_date.setDate(date);
String sql_ps="select id,name,detail,quantity,total_cost,profit,date_sold,sold_by from sells where date_sold like '%"+dtf.format(date)+"%' order by date_sold desc";
         pst=conn.prepareStatement(sql_ps);
        rs=pst.executeQuery();
        t_sold.setModel(DbUtils.resultSetToTableModel(rs));
                TableColumnModel tcm2=t_sold.getColumnModel();
        tcm2.removeColumn(tcm2.getColumn(0));
        //sell_date.setDate(null);
        name.setText("");
        detail.setText("");
        quantity.setText("");
        price.setText("");
        total.setText("0");
                
paid.setText(null);
balance.setText(null);
total_b.setText("0");
            JOptionPane.showMessageDialog(null,"Product sold");
            }else
                  if(tb_quantity==0){
              JOptionPane.showMessageDialog(null,"Product out of Stock");
              }else
                  {
              JOptionPane.showMessageDialog(null,"Please enter valid quantity");
              }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        
    }//GEN-LAST:event_jPanel7MouseClicked
public class textenable extends transact{


}
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if(price.isEnabled()){
            price.setEnabled(false);
        
        }else{
        price.setEnabled(true);
        }
        
        ;
      //  if(price.enabled(true))
              //  {}
       
       
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceActionPerformed
        // TODO add your handling code here:
            String sum;
        sum=String.valueOf(Integer.parseInt(quantity.getText())*Integer.parseInt(price.getText()));
        total.setText(sum);
                if(!(paid.getText()).equals("")){
                    int change;
   change=Integer.parseInt(paid.getText())-Integer.parseInt(total.getText());
   String change2=String.valueOf(change);
   balance.setText(change2);
                }else{
        balance.setText("0");
        }
    }//GEN-LAST:event_priceActionPerformed

    private void quantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantityKeyReleased
            String sum;
        sum=String.valueOf(Integer.parseInt(quantity.getText())*Integer.parseInt(price.getText()));
        total.setText(sum);
        // TODO add your handling code here:
        if(!(paid.getText()).equals("")){
                    int change;
   change=Integer.parseInt(paid.getText())-Integer.parseInt(total.getText());
   String change2=String.valueOf(change);
   balance.setText(change2);
        }else{
        balance.setText("0");
        }
        total_b.setText(total.getText());
    }//GEN-LAST:event_quantityKeyReleased

    private void priceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceKeyReleased
         
            String sum;
        sum=String.valueOf(Integer.parseInt(quantity.getText())*Integer.parseInt(price.getText()));
        total.setText(sum);
        if(!(paid.getText()).equals("")){
                    int change;
   change=Integer.parseInt(paid.getText())-Integer.parseInt(total.getText());
   String change2=String.valueOf(change);
   balance.setText(change2);
                }else{
        balance.setText("0");
        }
        total_b.setText(total.getText());
        // TODO add your handling code here:
    }//GEN-LAST:event_priceKeyReleased
class get_row{
public get_row(){
     try{
javaconnect connect=new javaconnect();
          Connection conn=javaconnect.getConnection();
            ResultSet rs=null;
            //   Statement stmt=null;
            PreparedStatement pst=null;
   
            int index=jTable1.getSelectedRow();
            TableModel model=jTable1.getModel();
            String id_e = model.getValueAt(index, 0).toString();
            String name_e = model.getValueAt(index, 1).toString();
            String detail_e = model.getValueAt(index, 2).toString();
            String price_e = model.getValueAt(index, 3).toString();
            String quantity_e = model.getValueAt(index, 4).toString();
            String supplier_e = model.getValueAt(index, 5).toString();
     }catch(Exception e){
     JOptionPane.showMessageDialog(null,e);}
     
}
}
//public static int a=0;
    private void add_cartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_cartMouseClicked
 
        Statement stmt=null;
        String name_d=name.getText();
        String detail_d=detail.getText();
        String price_d=price.getText();
        String quantity_d=quantity.getText();
        String supplier_d=total.getText();
        try{
            javaconnect connect=new javaconnect();
          Connection conn=javaconnect.getConnection();
            ResultSet rs=null;
            //   Statement stmt=null;
            PreparedStatement pst=null;
           
            int index=jTable1.getSelectedRow();
            TableModel model=jTable1.getModel();
            String id_e = model.getValueAt(index, 0).toString();
            String name_e = model.getValueAt(index, 1).toString();
            String detail_e = model.getValueAt(index, 2).toString();
            String price_e = model.getValueAt(index, 5).toString();
            String quantity_e = model.getValueAt(index, 3).toString();
            String supplier_e = model.getValueAt(index, 4).toString();
             //Statement stmt=null;
             
             int tb_quantity=Integer.parseInt(quantity_e);
              int tx_quantity=Integer.parseInt(quantity.getText());
              if(tb_quantity>tx_quantity){
          PreparedStatement pst_p=null;
          ResultSet rs_p=null;
            String sql_p="SELECT buying_price FROM product WHERE id='"+id_e+"'";
        pst=conn.prepareStatement(sql_p);
        
        rs_p=pst.executeQuery();
        String usr_p=null;
        while (rs_p.next()) 
{
    String std_p= (rs_p.getString(1));
    float pt=Float.valueOf(total.getText())-(Float.valueOf(quantity.getText())*Float.valueOf(std_p));
    usr_p=String.valueOf(pt);
//JOptionPane.showMessageDialog(null,usr_p);
//System.out.println(usr_p);
//int a=Integer.parseInt(usr_p);
}
            String find="select * from cart where id='"+id_e+"'";
            pst=conn.prepareStatement(find);
            rs=pst.executeQuery();
            if(!rs.next()){
        String sql="insert into cart(id,name,detail,quantity,total_cost,profit) values('"+id_e+"','"+name_d+"','"+detail_d+"','"+quantity_d+"','"+total.getText()+"','"+usr_p+"')";
            stmt=conn.createStatement();
            stmt.executeUpdate(sql);
       
             String sql2="select * from cart";
         pst=conn.prepareStatement(sql2);
        rs=pst.executeQuery();
        cart.setModel(DbUtils.resultSetToTableModel(rs));
                TableColumnModel tcm1=cart.getColumnModel();
        tcm1.removeColumn(tcm1.getColumn(0));
 /*String sql6="select  `id` as 'id',name as 'Name',detail as 'Description',quantity as 'Quantity',supplier as 'Supplier',price as 'Cost (Ksh)' from product";
       pst=conn.prepareStatement(sql6);
        rs=pst.executeQuery(); 
        JOptionPane.showMessageDialog(null,rs.getString("Quantity"));
        String quantity_r=rs.getString("Quantity");*/
        try{
           
            int rem=Integer.parseInt(quantity_e)-Integer.parseInt(quantity.getText());
            
  

       /*    rem=rem-1;
           rem=rem-a;
            a=a+1;*/
            String red="update product set quantity='"+rem+"' where id='"+id_e+"'";
            stmt=conn.createStatement();
            stmt.executeUpdate(red);
            String sql3="select  `id` as 'id',name as 'Name',detail as 'Description',quantity as 'Quantity',supplier as 'Supplier',price as 'Cost (Ksh)' from product";
       pst=conn.prepareStatement(sql3);
        rs=pst.executeQuery();
        jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                TableColumnModel tcm=jTable1.getColumnModel();
        tcm.removeColumn(tcm.getColumn(0));
        //JOptionPane.showMessageDialog(null,Integer.parseInt(quantity.getText()));
     try{
         
         ResultSet rs2=null;
         PreparedStatement pst2=null;
        String sql4="select SUM(total_cost) from cart";
        pst2=conn.prepareStatement(sql4);
        
        rs2=pst2.executeQuery();
        while (rs2.next()) 
{
    int std = rs2.getInt(1);
    total_l.setText(String.valueOf(std));
}
     }
        catch(SQLException e){
              JOptionPane.showMessageDialog(null,e);
        
        }
        
        }
            catch(NumberFormatException | SQLException e){ 
               JOptionPane.showMessageDialog(null,e+"yap");
            }
        
                      //  JOptionPane.showMessageDialog(null,"Product Succefully updated");
            }else{
             JOptionPane.showMessageDialog(null,"Item already dded");
             
            }
              
name.setText("");
        detail.setText("");
        quantity.setText("");
        price.setText("");
        total.setText("0");
                
paid.setText(null);
balance.setText(null);
total_b.setText("0");}else
                  if(tb_quantity==0){
              JOptionPane.showMessageDialog(null,"Product out of Stock");
              }else
                  {
              JOptionPane.showMessageDialog(null,"Please enter valid quantity");
              }
}catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_add_cartMouseClicked


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
   try{
        int index=cart.getSelectedRow();
    TableModel model=cart.getModel();
    PreparedStatement pst=null;
    ResultSet rs=null;
    javaconnect connect=new javaconnect();
          Connection conn=javaconnect.getConnection();
             
        String id_c= model.getValueAt(index, 0).toString();
        String sql="delete from cart where id='"+id_c+"'";
        pst=conn.prepareStatement(sql);
        pst.executeUpdate();
        String sql2="select * from cart";
         pst=conn.prepareStatement(sql2);
        rs=pst.executeQuery();
        cart.setModel(DbUtils.resultSetToTableModel(rs));
                TableColumnModel tcm1=cart.getColumnModel();
        tcm1.removeColumn(tcm1.getColumn(0));
                  Statement stmt=null; 
                //  int index=cart.getSelectedRow();
          //  TableModel model=cart.getModel();
          //Statement stmt=null;
          String qty="select * from product where id='"+id_c+"'";
          stmt=conn.createStatement();
          rs=stmt.executeQuery(qty);
          while(rs.next()){
          String quantity_e=rs.getString("quantity");
                    String id_ct = model.getValueAt(index, 0).toString();
          String quantity_c = model.getValueAt(index, 3).toString();
          int rem=Integer.parseInt(quantity_e)+Integer.parseInt(quantity_c);
                 /*    rem=rem-1;
           rem=rem-a;
            a=a+1;*/
            String red="update product set quantity='"+rem+"' where id='"+id_ct+"'";
            stmt=conn.createStatement();
            stmt.executeUpdate(red);
         String sql3="select  `id` as 'id',name as 'Name',detail as 'Description',quantity as 'Quantity',supplier as 'Supplier',price as 'Cost (Ksh)' from product";
       pst=conn.prepareStatement(sql3);
       rs=pst.executeQuery();
        jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                TableColumnModel tcm=jTable1.getColumnModel();
        tcm.removeColumn(tcm.getColumn(0));
          }

            
  


        try{
         
         ResultSet rs2=null;
         PreparedStatement pst2=null;
        String sql4="select SUM(total_cost) from cart";
        pst2=conn.prepareStatement(sql4);
        
        rs2=pst2.executeQuery();
        while (rs2.next()) 
{
    int std = rs2.getInt(1);
    total_l.setText(String.valueOf(std));
}
     }
        catch(SQLException e){
              JOptionPane.showMessageDialog(null,e);
        
        }
   }catch(Exception e){
   JOptionPane.showMessageDialog(null,e);
   }
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityActionPerformed

    private void jPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel11MouseClicked
try{ ResultSet rs=null;
 Statement stmt=null;
 PreparedStatement pst=null;
          javaconnect connect=new javaconnect();
          Connection conn=javaconnect.getConnection();
                String sql4="SELECT username FROM `login_time` WHERE id=(select MAX(ID) from login_time)";
        pst=conn.prepareStatement(sql4);
        
        rs=pst.executeQuery();
        while (rs.next()) 
{
    String std = rs.getString(1);
    String usr=String.valueOf(std);
          //  pack();
          // JOptionPane.showMessageDialog(null,id_e+","+name_d+","+detail_d+","+quantity_d+","+total.getText() );

        
        String buy="insert into sells(id,name,detail,quantity,total_cost,sold_by,profit) select id,name,detail,quantity,total_cost,'"+usr+"',profit from cart ";
        stmt=conn.createStatement();
        stmt.executeUpdate(buy);}
        String buy2="delete from  cart";
        stmt=conn.createStatement();
        stmt.executeUpdate(buy2);
         String sql2="select * from cart";
         pst=conn.prepareStatement(sql2);
        rs=pst.executeQuery();
        cart.setModel(DbUtils.resultSetToTableModel(rs));
            TableColumnModel tcm1=cart.getColumnModel();
        tcm1.removeColumn(tcm1.getColumn(0));
                 DateFormat dtf=new SimpleDateFormat("yyyy-MM-dd");
       // Date date=new Date();
       Date date=new Date();
        dtf.format(date);
        sell_date.setDate(date);
String sql_ps="select id,name,detail,quantity,total_cost,profit,date_sold,sold_by from sells where date_sold like '%"+dtf.format(date)+"%' order by date_sold desc";
         pst=conn.prepareStatement(sql_ps);
        rs=pst.executeQuery();
        t_sold.setModel(DbUtils.resultSetToTableModel(rs));
                TableColumnModel tcm2=t_sold.getColumnModel();
        tcm2.removeColumn(tcm2.getColumn(0));
        //sell_date.setDate(null);
        total_l.setText("0");
}
catch(Exception e){
JOptionPane.showMessageDialog(null,e);}

        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel11MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try{
             ResultSet rs=null;
 Statement stmt=null;
 PreparedStatement pst=null;
            javaconnect connect=new javaconnect();
          Connection conn=javaconnect.getConnection();
             DateFormat dtf=new SimpleDateFormat("yyyy-MM-dd");
       // Date date=new Date();
        dtf.format(sell_date.getDate());
        String sql_ps="select id,name,detail,quantity,total_cost,profit,date_sold,sold_by from sells where date_sold like '%"+dtf.format(sell_date.getDate())+"%' order by date_sold desc";
         pst=conn.prepareStatement(sql_ps);
        rs=pst.executeQuery();
        t_sold.setModel(DbUtils.resultSetToTableModel(rs));
            TableColumnModel tcm2=t_sold.getColumnModel();
        tcm2.removeColumn(tcm2.getColumn(0));
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null,"Enter date to filter");
        }
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void total_lCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_total_lCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_total_lCaretPositionChanged

    private void jPanel3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel3KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel3KeyReleased

    private void jPanel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseClicked
        int change;
        change=Integer.parseInt(paid.getText())-Integer.parseInt(total.getText());
        String change2=String.valueOf(change);
        balance.setText(change2);
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel3MouseClicked

    private void paidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paidActionPerformed

    private void totalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_totalPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_totalPropertyChange

    private void total_bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_total_bActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_total_bActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(transact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(transact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(transact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(transact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new transact().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel add_cart;
    private javax.swing.JLabel balance;
    private javax.swing.JTable cart;
    private javax.swing.JTextField detail;
    private javax.swing.JTextField detail1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton6;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    public javax.swing.JTextField name;
    public javax.swing.JTextField name1;
    private javax.swing.JTextField paid;
    private javax.swing.JTextField price;
    private javax.swing.JTextField price1;
    private javax.swing.JTextField quantity;
    private javax.swing.JTextField quantity1;
    private javax.swing.JTextField search;
    private javax.swing.JTextField search1;
    private com.toedter.calendar.JDateChooser sell_date;
    private javax.swing.JTable t_sold;
    private javax.swing.JLabel total;
    private javax.swing.JTextField total_b;
    private javax.swing.JLabel total_l;
    // End of variables declaration//GEN-END:variables
}
